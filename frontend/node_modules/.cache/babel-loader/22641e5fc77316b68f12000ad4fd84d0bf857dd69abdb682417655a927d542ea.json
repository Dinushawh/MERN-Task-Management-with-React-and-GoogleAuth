{"ast":null,"code":"var _jsxFileName = \"/Users/dinushaweerakoon/Desktop/Projects/MERN-Todo-App-with-React-and-GoogleAuth/src/components/GoogleLogin.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport jwtDecode from \"jwt-decode\";\nimport { useGoogleLogin, GoogleLogin } from \"@react-oauth/google\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GoogleLogin2() {\n  _s();\n  const login = useGoogleLogin({\n    onSuccess: credentialResponse => console.log(credentialResponse),\n    flow: \"auth-code\"\n  });\n  function handleButtonClick() {\n    login();\n  }\n  // const login = useGoogleLogin({\n  //   onSuccess: (tokenResponse) => console.log(\"success\", tokenResponse),\n  //   onError: (error) => console.log(error),\n  //   // onSuccess: async (tokenResponse) => {\n  //   //   try {\n  //   //     const data = axios.get(\n  //   //       \"https://www.googleapis.com/oauth2/v3/userinfo\",\n  //   //       {\n  //   //         headers: {\n  //   //           Authorization: `Bearer ${tokenResponse.accessToken}`,\n  //   //         },\n  //   //       }\n  //   //     );\n  //   //     console.log(data);\n  //   //   } catch (err) {\n  //   //     console.log(err);\n  //   //   }\n  //   // },\n  // });\n\n  // function handleCredentialResponse(response) {\n  //   var userObject = response.credential;\n  //   console.log(\"Encoded JWT id Tocken: \" + userObject);\n  //   var decodeduserObject = jwtDecode(userObject);\n  //   console.log(\"Decoded JWT id Tocken: \" + JSON.stringify(decodeduserObject));\n  //   console.log(\"User ID: \" + decodeduserObject.sub);\n  // }\n  // //global google\n  // const google = window.google;\n  // window.onload = function () {\n  //   google.accounts.id.initialize({\n  //     client_id:\n  //       \"25963119610-ubc8001rfa4nd2huaosukq4r3hfpd9b3.apps.googleusercontent.com\",\n  //     callback: handleCredentialResponse,\n  //   });\n  //   google.accounts.id.renderButton(\n  //     document.getElementById(\"googleLoginButton\"),\n  //     { theme: \"outline\", size: \"large\" } // customization attributes\n  //   );\n  //   google.accounts.id.prompt(); // also display the One Tap dialog\n  // };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 gap-4 pt-4\",\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: credentialResponse => {\n          console.log(credentialResponse.credential);\n          var decodeduserObject = jwtDecode(credentialResponse.credential);\n          console.log(\"Decoded JWT id Tocken: \" + JSON.stringify(decodeduserObject));\n        },\n        onError: () => {\n          console.log(\"Login Failed\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(GoogleLogin2, \"zY/v83cBMrwD3I51qGaOiRFUBvU=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = GoogleLogin2;\nexport default GoogleLogin2;\nvar _c;\n$RefreshReg$(_c, \"GoogleLogin2\");","map":{"version":3,"names":["React","jwtDecode","useGoogleLogin","GoogleLogin","FcGoogle","jsxDEV","_jsxDEV","Fragment","_Fragment","GoogleLogin2","_s","login","onSuccess","credentialResponse","console","log","flow","handleButtonClick","children","className","credential","decodeduserObject","JSON","stringify","onError","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dinushaweerakoon/Desktop/Projects/MERN-Todo-App-with-React-and-GoogleAuth/src/components/GoogleLogin.jsx"],"sourcesContent":["import React from \"react\";\nimport jwtDecode from \"jwt-decode\";\n\nimport { useGoogleLogin, GoogleLogin } from \"@react-oauth/google\";\nimport { FcGoogle } from \"react-icons/fc\";\n\nfunction GoogleLogin2() {\n  const login = useGoogleLogin({\n    onSuccess: (credentialResponse) => console.log(credentialResponse),\n    flow: \"auth-code\",\n  });\n\n  function handleButtonClick() {\n    login();\n  }\n  // const login = useGoogleLogin({\n  //   onSuccess: (tokenResponse) => console.log(\"success\", tokenResponse),\n  //   onError: (error) => console.log(error),\n  //   // onSuccess: async (tokenResponse) => {\n  //   //   try {\n  //   //     const data = axios.get(\n  //   //       \"https://www.googleapis.com/oauth2/v3/userinfo\",\n  //   //       {\n  //   //         headers: {\n  //   //           Authorization: `Bearer ${tokenResponse.accessToken}`,\n  //   //         },\n  //   //       }\n  //   //     );\n  //   //     console.log(data);\n  //   //   } catch (err) {\n  //   //     console.log(err);\n  //   //   }\n  //   // },\n  // });\n\n  // function handleCredentialResponse(response) {\n  //   var userObject = response.credential;\n  //   console.log(\"Encoded JWT id Tocken: \" + userObject);\n  //   var decodeduserObject = jwtDecode(userObject);\n  //   console.log(\"Decoded JWT id Tocken: \" + JSON.stringify(decodeduserObject));\n  //   console.log(\"User ID: \" + decodeduserObject.sub);\n  // }\n  // //global google\n  // const google = window.google;\n  // window.onload = function () {\n  //   google.accounts.id.initialize({\n  //     client_id:\n  //       \"25963119610-ubc8001rfa4nd2huaosukq4r3hfpd9b3.apps.googleusercontent.com\",\n  //     callback: handleCredentialResponse,\n  //   });\n  //   google.accounts.id.renderButton(\n  //     document.getElementById(\"googleLoginButton\"),\n  //     { theme: \"outline\", size: \"large\" } // customization attributes\n  //   );\n  //   google.accounts.id.prompt(); // also display the One Tap dialog\n  // };\n  return (\n    <>\n      <div className=\"grid grid-cols-1 gap-4 pt-4\">\n        <GoogleLogin\n          onSuccess={(credentialResponse) => {\n            console.log(credentialResponse.credential);\n            var decodeduserObject = jwtDecode(credentialResponse.credential);\n            console.log(\n              \"Decoded JWT id Tocken: \" + JSON.stringify(decodeduserObject)\n            );\n          }}\n          onError={() => {\n            console.log(\"Login Failed\");\n          }}\n        />\n      </div>\n      {/* <div className=\"grid grid-cols-1 gap-4 pb-6\">\n        <button\n          className=\"w-full p-2 rounded shadow-sm mt-4 text-sm border flex items-center justify-center\"\n          onClick={() => handleButtonClick()}\n        >\n          <FcGoogle className=\"w-5 h-5\" />\n          <span className=\"ml-2\">Sign up with Google</span>\n        </button>\n      </div> */}\n    </>\n  );\n}\n\nexport default GoogleLogin2;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,cAAc,EAAEC,WAAW,QAAQ,qBAAqB;AACjE,SAASC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,KAAK,GAAGT,cAAc,CAAC;IAC3BU,SAAS,EAAGC,kBAAkB,IAAKC,OAAO,CAACC,GAAG,CAACF,kBAAkB,CAAC;IAClEG,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,SAASC,iBAAiBA,CAAA,EAAG;IAC3BN,KAAK,CAAC,CAAC;EACT;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACEL,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACEZ,OAAA;MAAKa,SAAS,EAAC,6BAA6B;MAAAD,QAAA,eAC1CZ,OAAA,CAACH,WAAW;QACVS,SAAS,EAAGC,kBAAkB,IAAK;UACjCC,OAAO,CAACC,GAAG,CAACF,kBAAkB,CAACO,UAAU,CAAC;UAC1C,IAAIC,iBAAiB,GAAGpB,SAAS,CAACY,kBAAkB,CAACO,UAAU,CAAC;UAChEN,OAAO,CAACC,GAAG,CACT,yBAAyB,GAAGO,IAAI,CAACC,SAAS,CAACF,iBAAiB,CAC9D,CAAC;QACH,CAAE;QACFG,OAAO,EAAEA,CAAA,KAAM;UACbV,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC7B;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBAUN,CAAC;AAEP;AAAClB,EAAA,CA7EQD,YAAY;EAAA,QACLP,cAAc;AAAA;AAAA2B,EAAA,GADrBpB,YAAY;AA+ErB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}