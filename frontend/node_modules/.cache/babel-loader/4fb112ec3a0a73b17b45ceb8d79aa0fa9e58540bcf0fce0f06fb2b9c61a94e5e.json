{"ast":null,"code":"var _jsxFileName = \"/Users/dinushaweerakoon/Desktop/Projects/MERN-Todo-App-with-React-and-GoogleAuth/frontend/src/components/GoogleLogin.tsx\";\nimport React from \"react\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport jwtDecode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GoogleLogin2() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 gap-4 pt-4\",\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: credentialResponse => {\n          console.log(credentialResponse.credential);\n          const USER_CREDENTIAL = jwtDecode(credentialResponse.credential);\n          console.log(USER_CREDENTIAL);\n        },\n        onError: () => {\n          console.log(\"Login Failed\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = GoogleLogin2;\nexport default GoogleLogin2;\nvar _c;\n$RefreshReg$(_c, \"GoogleLogin2\");","map":{"version":3,"names":["React","GoogleLogin","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","GoogleLogin2","children","className","onSuccess","credentialResponse","console","log","credential","USER_CREDENTIAL","onError","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dinushaweerakoon/Desktop/Projects/MERN-Todo-App-with-React-and-GoogleAuth/frontend/src/components/GoogleLogin.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport jwtDecode from \"jwt-decode\";\n\nfunction GoogleLogin2() {\n  return (\n    <>\n      <div className=\"grid grid-cols-1 gap-4 pt-4\">\n        <GoogleLogin\n          onSuccess={(credentialResponse) => {\n            console.log(credentialResponse.credential);\n            const USER_CREDENTIAL = jwtDecode(credentialResponse.credential);\n            console.log(USER_CREDENTIAL);\n          }}\n          onError={() => {\n            console.log(\"Login Failed\");\n          }}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default GoogleLogin2;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,WAAW,QAAQ,qBAAqB;AACjD,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,SAASC,YAAYA,CAAA,EAAG;EACtB,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACEJ,OAAA;MAAKK,SAAS,EAAC,6BAA6B;MAAAD,QAAA,eAC1CJ,OAAA,CAACH,WAAW;QACVS,SAAS,EAAGC,kBAAkB,IAAK;UACjCC,OAAO,CAACC,GAAG,CAACF,kBAAkB,CAACG,UAAU,CAAC;UAC1C,MAAMC,eAAe,GAAGb,SAAS,CAACS,kBAAkB,CAACG,UAAU,CAAC;UAChEF,OAAO,CAACC,GAAG,CAACE,eAAe,CAAC;QAC9B,CAAE;QACFC,OAAO,EAAEA,CAAA,KAAM;UACbJ,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC7B;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACN,CAAC;AAEP;AAACC,EAAA,GAjBQd,YAAY;AAmBrB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}